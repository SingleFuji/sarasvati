#summary File format for Process Definitions

= Introduction =
Sarasvati uses an XML file format for process definitions. These files can be loaded into in-memory graph structures and executed, or they can be loaded first into a database, and from there loaded and executed.

= Getting Started =

The process definition file format is defined by an XSD, which can [http://code.google.com/p/sarasvati/source/browse/common/ProcessDefinition.xsd available to view in the project SVN].

The simplest process definition looks like:

{{{
<?xml version="1.0"?>

<sv:process-definition name="simplest" xmlns:sv="http://sarasvati.googlecode.com/ProcessDefinition">

  <node name="start" isStart="true"/>

</sv:process-definition>
}}}

So, line by line:

{{{
<?xml version="1.0"?>
}}}

This is the header which every XML file should have, indicating the version of the XML specification it follows.

{{{
<sv:process-definition name="simplest" xmlns:sv="http://sarasvati.googlecode.com/ProcessDefinition">
}}}

The root element of every process Sarasvati definition must be `process-definition`. It has a required `name` element. Every process definition must have a unique name. It also indicates an XML namespace, of `"http://sarasvati.googlecode.com/ProcessDefinition"` and ties it to `sv`. This is why the opening and closing tags are `sv:process-definition`.

{{{
  <node name="start" isStart="true"/>
}}}

Every process definition must have at least one `node` element defined. Every node must have a name unique to that file. Any node may have the `isStart` attribute set. If not specified it will default to false. Note that the `node` element is not prefxied with `sv:` because the namespace has already been established by the root element.

{{{
</sv:process-definition>
}}}

Here, the root element is closed and the process definition is complete.

So, what does the node `start` do? Every node may optionally define a type, via the `type` attribute. If no type is specified, the node type defaults to `node`. This default type just completes the node token and exists via the default arc.