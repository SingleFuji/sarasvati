#summary Sarasvati Roadmap
#labels Featured

= Roadmap =

Sarasvati is fairly stable at this point, and we are workings towards a 1.0 release. 

<wiki:toc/>

== 1.0 TODO ==

=== Editor: In Progress ===

A graphical editor for process definitions is in progress. It is now usable for process definitions that don't use externals.

 * Undo/Redo framework: Done
 * Load: Done
 * Save: Done
 * Add nodes: Done
 * Delete nodes: Done
 * Add external: Done
 * Delete external: Done
 * Move nodes: Done
 * Connect nodes: Done
 * Change connections: Done
 * Remove connections: Done
 * Edit node properties: Done
 * Edit external properties: Done
 * Edit arc properties: Done
 * Cleanup undo/redo MDI interactions: Done
 * Autolayout: Done
 * Self arcs: Done
 * Arc labels: Done
 * Cleanup move/add/reconnect interactions: Done
 * Check for unsaved: Done
 * Graph validation on save: _Started_
 * Preferences
   * Node Types
     * Basic node type management: Done
     * Select icon type: *TODO*
     * Select icon color: *TODO*
 * Select
   * Select single for delete: Done
   * Selected multiple for delete: Done
   * Select multipe for move: Done
   * Cut: *Started*
   * Copy: *TODO*
   * Paste: *TODO*
 * Investigate shortestpathrouter weirdness: *Likely post 1.0.*
 * Process Definition Library: *TODO*
 * Guard Editor: *TODO*

=== Token Sets/Template Nodes: Completed ===

See [TokenSetsDesign design]. 

 * Milestone I
   * Basic template based split join working in memory engine
   * Status: Done
 * Milestone II
   * Basic template based split join working in hibernate engine
   * Status: Done
 * Milestone III
   * TokenSet env working in memory engine
   * Status: Done
 * Milestone IV
   * TokenSet env working in hibernate engine
   * Status: Done
 * Milestone V
   * TokenSet integration with backtracking
   * Status: Done
 * Milestone VI
   * Allow specification of a the name of a token set to join on in a TokenSet
   * Status: Done

===Documentation: Not yet started===
 # Documentation needs to be updated for changes. 
   * Split out external
   * isJoin => joinType
   * Env refactoring
   * hibernate node type handling
   * Graph validation framework
 # It also need to be shipped with the release, rather than just available on the project WIKI. 
   * Could use a WIKI -> HTML compiler. 
   * Alternately, could switch to alternate documentation format, such as DocBook (probably a better long term solution)

=== Performance Tuning: Completed ===
Analyzed SQL generated from hibernate. Ran explain plan on each statement and made sure that no table scans were being performed. 

=== Broader Database support: In progress ===

  * Investigate if schema can be generate from Hibernate mappings
    * Issue with generating FKs to enum tables
    * Issue text columns on postgesql vs varchars in other dbs
  * Investigate table name mappings, so users can pick their own table names
    * Use hibernate NamingStrategy
    * Make sure we don't hardcode tables/column name, if possible.
  * Need test suite for DB
    * Test against following databases
      * Postgresql
      * Sybase
      * MySQL
      * Oracle
      * DB2
      * Some simple file based engine? BerkleyDB?

=== JDBC Backend: In progress ===

May not get to this pre-1.0 release. However, this would be good as a fall back for users who don't use hibernate. Also, it would make sure that the interfaces are sufficiently flexible.

Implementation started in trunk.

==Post 1.0 Release==

Possibilities:

  * Improve Editor (expression editor?)
  * Improve visualizations
  * Additional backends?
  * Porting to .NET/Python/Ruby?
    * Porting to C# is a priority, based on request.