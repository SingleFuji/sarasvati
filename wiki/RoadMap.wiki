#summary Sarasvati Roadmap
#labels Featured

= Roadmap =

Sarasvati is fairly stable at this point, and we are workings towards a 1.0 release. 

== 1.0 TODO ==

=== Editor ===

A graphical editor for process definitions is in progress. 

 * Undo/Redo framework: Done
 * Load: Done
 * Save: 50% done
 * Add nodes: 
   * Implemented: Yes
   * Undo/redo: Yes
 * Delete nodes
   * Implemented: No
   * Undo/redo: No
 * Add external
   * Implemented: No
   * Undo/redo: No
 * Delete external
   * Implemented: No
   * Undo/redo: No
 * Move nodes
   * Implemented: Yes
   * Undo/redo: No
 * Connect nodes
   * Implemented: Yes
   * Undo/redo: No
 * Change connections
   * Implemented: Yes
   * Undo/redo: No
 * Remove connections
   * Implemented: Yes
   * Undo/redo: No
 * Edit node properties
   * Implemented: Started
   * Undo/redo: No
 * Edit arc properties
   * Implemented: No
   * Undo/redo: No
 * Cleanup undo/redo MDI interactions: Done

=== Template Node ===

See [TokenSetsDesign design]. 

 * Milestone I
   * Basic template based split join working in memory engine
   * Status: Done
 * Milestone II
   * Basic template based split join working in hibernate engine
   * Status: Incomplete
 * Milestone III
   * TokenSet env working in memory engine
   * Status: Incomplete
 * Milestone IV
   * TokenSet env working in hibernate engine
   * Status: Incomplete

===Documentation===
Documentation needs to be updated for changes. It also need to be shipped with the release, rather than just available on the project WIKI. Need to find a WIKI -> HTML compiler

=== Performance Tuning ===

Need to load 1k, 10k, 100k and maybe 1M process definitions, and make sure the hibernate backend still performs well. Will probably need to add indexes in some places.

Will need to run 1k, 10k, 100k and maybe 1M processes through and check performance.

=== JDBC Backend ===

May not get to this pre-1.0 release. However, this would be good as a fall back for users who don't use hibernate. Also, it would make sure that the interfaces are sufficiently flexible.

Implementation started in trunk.

==Post 1.0 Release==

Possibilities:

  * Improve Editor (expression editor?)
  * Improve visualizations
  * Additional backends?
  * Porting to .NET/Python/Ruby?
    * Porting to C# is a priority, based on request.